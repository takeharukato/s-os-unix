FRESCH(0x27A2)

空きFCB(ディレクトリエントリ)を検索する

破壊レジスタ:AF,DE,HL
保存レジスタ:BC

ディレクトリエントリの先頭から1クラスタ分の各ディレクトリエントリ内のファイル名
(HLで参照)を順に調査し, 空きエントリ(属性が0x00のエントリ)のアドレスをHLに
引き渡して復帰する

返り値:
	フラグ値で終了時の状態を判定する
	C=0, Z=0    空きディレクトリエントリを見つけて正常終了
	C=0, Z=1    空きディレクトリエントリが見つからなかった
	C=1         ディレクトリ探査中にエラーが発生した
	            Aレジスタにエラーコードが設定される
		    ディスクリード時(DSKRED)が返却するエラーコードが
		    設定される
		    空きエントリがない場合は, Aに3 (File not found)が設定され
		    る

--- 擬似コード
	int    rc;
	BYTE attr;
	BYTE *res = NULL;  /* 見つかったエントリ情報を参照する変数 */

	save_regs(BC)

	for(rec=#DIRPSで指定されたレコード番号; ; ++rec ) {

		/* 以下の条件でレコードを#DTBUFにディレクトリエントリを読み取る */
		rc = DSKRD(レコード番号=rec,
	      	      読取先アドレス=#DTBUF内に記載されたデータバッファアドレス,
	              読取レコード数=1)
	       if ( rc != 0 ) {

	       	  assert( rc != 3 ); /* File not foundは返さないはず */
		  goto out;  /* 空エントリ検出 */
               }

	       /* 1レコード中での探索(*)
	        *  (*) 1レコードに8個のディレクトリエントリが入っているので
		* 8回ループする
		*/
	       for( i = 0; 8 > i; ++i){

		     /* 比較するディレクトリエントリ */
	             res = (BYTE *)(#DTBUF+ (ディレクトリエントリ長(32) * i));
		     attr = *res;  /* ディレクトリエントリ中の属性値を取得 */

		     if ( attr == 0x00 )
		     	  goto out;  /* 空エントリ検出 */

		     /* 0xffはディレクトリエントリの終了を意味する */
		     if ( attr == 0xff ) {
		     	  rc = 3; /* File not found */
		     	  goto out;  /* ファイルが見つからなかった */
		     }
	    }
       }

out:
	restore_regs(BC)
	return rc;
--- 擬似コード


FRESCH:
	PUSH 	BC		; BCを保存
	LD	C,16		; Cに16(Direntory entryのレコード数(1クラスタ)
	LD	DE,(#DIRPS)	; DIRPSのレコード番号を取得
FRESC1:
	LD	HL,(#DTBUF)     ; データバッファのアドレスを取得
	LD	A,1             ; セクタ読み込む
	CALL 	DSKRED		; DTBUFにディレクトリエントリを読み込む
	JR	C, FRESC3	; エラー時はCフラグを保持して抜ける(IOエラー)
	LD	B,8		; 1レコード中のエントリ数(8エントリ)

FRESC2:				; 1エントリ中から対象ファイルを探す
	LD	A,(HL)		; データバッファから一文字読み込む(ATTR)
	OR      A		; Aが00 (空きエントリ)の場合は
	JR      Z,FCBSC4	; 空きエントリ検出処理へ
	CP	$FF             ; 最終ディレクトリエントリの場合は
	JR	Z,FRESC4	; サブルーチンから抜ける
	PUSH	DE		; DIRPSを保存
	LD	DE,32           ; ディレクトリエントリ長追加(次のエントリへ)
	ADD	HL,DE           ; (HLは次のエントリを指す)
	POP	DE		; DIRPSを復元
	DJNZ	FRESC2		; 8エントリ(レコード内の全エントリを調査するまで繰り返す
	INC	DE		; 調査対象レコード番号を加算
	DEC	C		; 残り調査エントリ数を減算
	JR	NZ,FRESC1	; 0でなければディレクトリエントリ調査を継続
FRESC3:                         ; ディレクトリエントリの終端検出時の処理
	DB	$3E		; 3E AF = LD A,0AFhにしてXOR Aの処理をスキップする
				; 呼び元でCフラグが立っておらず, かつ, Aが0でなければ
				; File not found扱いにするよう処理している
FRESC4:
	XOA	A		; Zフラグ, Cフラグをクリア
	POP	BC
	RET
