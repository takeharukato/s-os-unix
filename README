THIS FILE IS WRITTEN IN JAPANESE AND CODED IN MS-KANJI CODE

これは SWORD for UNIX version 0.5 (beta) のパッケージです。
配布条件は GPL に従います。無保証です。

コマンドラインオプション:
  -d file	file を SWORD DOS モジュールとみなして読み込みます
  -l file	file を読み込んでから実行を開始します
  -a		-l で読み込むファイルの load アドレスを設定します
  -j addr	直接 addr から実行を開始します
  -c		ソフトウェア CAPS LOCK を有効にします
  例: sos -d sword.bin

SWORD DOS モジュールについて:
  現在の SWORD Emulator はオリジナル SWORD の共通 DOS モジュールを
利用しているため、起動時に DOS モジュールをファイルから読み込む
必要があります。このファイルはコマンドラインによる指定、初期化ファ
イルによる指定、コンパイル時埋め込みの指定が可能です。
  本パッケージには Oh!MZ 誌に掲載された全機種共通 DOS モジュール が
sword.bin のファイル名で含まれています。

初期化ファイル:
  Emulator は起動時に初期化ファイル (~/.sosrc) を読み込み、それに
よってディスクイメージファイルや DOS モジュールの指定を行ないます。
初期化ファイルの中に書けるのは、以下のコマンドです。空行および # で
始まる行は無視されます。
$ mount <drive> <filename>
  <drive> に相当するディスクイメージファイルとして <filename> の
  ファイルを指定します。<drive> は 0-3 の数字で指定します。
  filename には "~" などのメタキャラクタは利用できません。
$ dosfile <filename>
  DOS イメージファイルとして <filename> のファイルを指定します

利用方法:
  SWORD Emulator は起動後、ジャンプアドレスが指定されていなければ、
SWORD のコマンドラインに入ります。ここでは、SWORD の標準的コマンド
群である "L" や "J" などのコマンドが利用できます。現在の実装では、
SWORD 拡張セットのコマンドは使えません。
  ドライブ A:-D: によってディスクイメージファイルの内容にアクセス
できます。また、Q: によって UNIX のファイルシステムにも直接アクセス
することができます。
  SWORD Emulator for UNIX では、X68K 版と同様に S-OS のディスクイメー
ジをファイルとして持ち、それをフロッピーディスクとしてアクセスします。
さらに、UNIX 上のファイルをドライブ Q: としてアクセスすることができ、
これによって UNIX とのファイル共有を容易にしています。
  具体的には Emulator から、UNIX 上の README というファイルが、Q:README
としてアクセスできます。

  "M" コマンドによって、プロンプトが "$" になり、Emulator モニタに
制御が移ります。ここでは、以下のコマンドが利用できます。
$ mount <drive> <filename>
  <drive> に相当するディスクイメージファイルとして <filename> の
  ファイルを指定します。<drive> は 0-3 の数字で指定します。
  filename には "~" などのメタキャラクタは利用できません。
  <filename> を省略すると、現在のそのドライブへ割り当てられている
  ファイルの指定を解除(unmount)します。また、全ての引数を省略すると、
  現在割り当てられているファイルを表示します。
$ cd <directory>
  Q: でアクセスできる UNIX ファイルシステム内でのディレクトリを
  移動します。
$ keymap <function> <key>
  簡易スクリーンエディットで用いるコントロールキーを割り当てます。
  詳細は後述します。
$ keyclear <key>
  簡易スクリーンエディットで用いるコントロールキーの割り当てを解除
  します。詳細は後述します。
$ ret
  SWORD に戻ります。

スクリーンエディット:
  SWORD Emulator は Emacs 風な簡易スクリーンエディット機能を持って
おり、一行入力の際などに利用できます。基本的にカーソルキーなどは
利用できず、移動等は全てコントロールコードで行います。初期状態で
割り当てられているキーバインドを以下に示します。括弧内は function 名です。
  C-a	カーソルを行頭に移動します (begin)
  C-b	カーソルを左に移動します (back)
  C-c	BREAK コードを入力します、この際それまでの先行入力はキャン
	セルされます
  C-d	カーソルのある文字を一文字削除します (delete)
  C-e	行末に移動します (end)
  C-f	カーソルを右に一文字移動します (forward)
  C-h	カーソルの左の文字を一文字削除します (backspace)
  C-i	TAB に相当する位置までカーソルを移動します (tab)
  C-j	改行し、一行入力を終了します (C-m と同じ)
  C-k	カーソルから行末までを削除し、カットバッファに記憶します (kill)
  C-l	画面を再描画します (redraw)
  C-m	改行し、一行入力を終了します (C-j と同じ)
  C-n	カーソルを下に一文字移動します (down)
  C-o	インサートモードとオーバーライトモードを切替えます (imode)
  C-p	カーソルを上に一文字移動します (up)
  C-y	カットバッファに記憶された文字列をカーソル位置に入力します (yank)
  C-z	(システムで割り当てられていれば) サスペンドします
  ESC	BREAK コードを入力します、先行入力はキャンセルされません
  これらのキーはその殆どが任意のコントロールコードに割り当てることが
可能です。割り当てには Emulator モニタの keymap コマンドと、
keyclear コマンドで行ないます。
  keymap コマンドは上記の function 名と、それに割り当てるキー 
(コントロールキーと一緒に押すキー) を指定することにより、キーを
押した時の動作を設定します。引数を省略すると現在の設定を表示します。
複数のキーに同じ function を定義することも可能です。例えば C-d でカーソルを
右に動かすようにするには、
  keymap forward d
とすれば OK です。
  keyclear コマンドはキーに割り当てられている function の登録を解除します。
引数を省略すると全ての割り当てを解除します。機能が割り当てられていない
キーはスクリーンエディット中は押しても無視されるようになります。
  初期化ファイルに keymap コマンドや keyclear を書くことができるので、
好みの keymap ができたら初期化ファイルに設定しておくと良いでしょう。
  なお、C-j, C-m, ESC は動作が特殊なために再割り当てできません。

UNIX ファイルフォーマット:
  UNIX ファイルシステムはドライブ Q: としてアクセスできます。
  UNIX ファイルシステム上にファイルを作成するとファイルの先頭に
  一行(18文字)の独自ヘッダが付加されます。このヘッダにより SWORD
  のファイルとしてのアトリビュートやアドレス情報等を記録します。
  ヘッダの無い通常の UNIX ファイルは 0000 番地から始まるアスキー
  ファイルとして扱われます。アスキーファイルに関しては、行末文字
  の変換及び最後のナル文字の付加/削除が自動的に行われ、UNIX 上の
  エディタで SWORD 用のファイルを編集したりすることを、殆んど意識
  する事無く行えます。

モジュールの内容:
  Z80 エミュレーション部は Frank Cringle 氏の yaze-1.06 のものを利用し
ています。
  各モジュールは以下の内容です。
・simz80	Z80 エミュレータ (yaze より)
・sos		SOS メインルーチン
・dio		DISK I/O ルーチン
・screen	コンソールコントロール
・trap		IOCS コール管理
・util		ユーティリティ関数群
・compat	システムに不足する関数群
・memcmp	memcmp() の簡易な実装

コード:
  コードは極力 ANSI, POSIX に準拠するように記述しています。
  それ以外では BSD UNIX を基準にしています。
  ANSI/POSIX 関数が無い場合は、基本的にそれらの関数を作ってください。
  配布時にサポートしている OS 用に作成した関数群は compat.c に
  まとめられています。

バグ:
  ・SWORD 共通 DOS 部分のライセンスは不明です。
  ・BREAK キーの実装は不完全です
  ・一度アクセスしたディスクイメージファイルは umount するまで
    open されたままになっています。
  ・誤った dos イメージファイルを指定すると暴走します。
  ・リアルタイムキー入力は馬鹿な実装なので、CPU を食い潰します。
  ・カーソルキーなどの入力ができません。
  ・四角等一部のキャラクタが異なったキャラクタで表示されます
  ・Q: に対するディレクトリ出力は全ファイルにアクセスします。
  ・リセットボタンはありません。
  ・一部に int が 32bit 以上であることを期待したコードがあります。
  ・一部コードに BYTE と unsigned char と char が混在しています。
  ・configure 対応は完全ではありません。
--
1999年 4月 8日
楯岡 孝道 (tate@spa.is.uec.ac.jp)
